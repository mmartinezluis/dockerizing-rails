version: v1.0
name: Docker
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
blocks:
  - name: Build
    task:
      jobs:
        - name: Build drkiq
          commands:
            - 'docker pull $DOCKER_USERNAME/dockerizing-rails:latest || true'
            - 'docker build -t $DOCKER_USERNAME/dockerizing-rails:latest --cache-from=$DOCKER_USERNAME/dockerizing-rails:latest -f Dockerfile.production .'
            - 'docker push $DOCKER_USERNAME/dockerizing-rails:latest'
        - name: Build nginx
          commands:
            - 'docker pull $DOCKER_USERNAME/dockerizing-rails:latest || true'
            - 'docker build -t $DOCKER_USERNAME/dockerizing-rails:latest --cache-from=$DOCKER_USERNAME/dockerizing-rails:latest -f Dockerfile.nginx .'
            - 'docker push $DOCKER_USERNAME/dockerizing-rails:latest'
      secrets:
        - name: dockerhub
      prologue:
        commands:
          - checkout
          - 'echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin'
  - name: Tests
    task:
      secrets:
        - name: dockerhub
      prologue:
        commands:
          - 'checkout '
          - cat docker-compose.test.yml | envsubst | tee docker-compose.yml
          - 'echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin'
          - 'docker pull $DOCKER_USERNAME/dockerizing-rails:latest || true'
          - 'docker-compose run drkiq rake db:reset'
          - 'docker-compose run drkiq rake db:migrate'
          - 'docker-compose run drkiq rake db:test:prepare'
      jobs:
        - name: Rails Test
          commands:
            - 'docker-compose run drkiq rake db:test:prepare'
            - docker-compose run drkiq rails test
      env_vars:
        - name: DATABASE_URL
          value: 'postgresql://drkiq:test_db_password@postgres:5432/drkiq?encoding=utf8&pool=5&timeout=5000'
